# Autogenerated by tools.schema.schema_pythonify at 2019-01-31 15:14:01.225670

from enum import Enum
from aiogopro.types import StatusType, CommandType


class Status(object):
    class App(object):
        mode = StatusType("mode", 43)
        sub_mode = StatusType("sub_mode", 44)
        video_selected_flatmode = StatusType("video_selected_flatmode", 71)
        photo_selected_flatmode = StatusType("photo_selected_flatmode", 72)
        timelapse_selected_flatmode = StatusType("timelapse_selected_flatmode", 73)
        digital_zoom = StatusType("digital_zoom", 75)
        capture_delay = StatusType("capture_delay", 84)

    class Broadcast(object):
        broadcast_progress_counter = StatusType("broadcast_progress_counter", 14)
        broadcast_viewers_count = StatusType("broadcast_viewers_count", 15)
        broadcast_bstatus = StatusType("broadcast_bstatus", 16)

    class Fwupdate(object):
        ota_status = StatusType("ota_status", 41)
        download_cancel_request_pending = StatusType("download_cancel_request_pending", 42)

    class Liveview(object):
        exposure_select_type = StatusType("exposure_select_type", 65)
        exposure_select_x = StatusType("exposure_select_x", 66)
        exposure_select_y = StatusType("exposure_select_y", 67)

    class MultiShot(object):
        multi_shot_protune_default = StatusType("multi_shot_protune_default", 48)
        multi_shot_count_down = StatusType("multi_shot_count_down", 49)

    class Photo(object):
        photo_protune_default = StatusType("photo_protune_default", 47)

    class Setup(object):
        date_time = StatusType("date_time", 40)

    class Storage(object):
        sd_status = StatusType("sd_status", 33)
        remaining_photos = StatusType("remaining_photos", 34)
        remaining_video_time = StatusType("remaining_video_time", 35)
        num_group_photos = StatusType("num_group_photos", 36)
        num_group_videos = StatusType("num_group_videos", 37)
        num_total_photos = StatusType("num_total_photos", 38)
        num_total_videos = StatusType("num_total_videos", 39)
        remaining_space = StatusType("remaining_space", 54)
        num_hilights = StatusType("num_hilights", 58)
        last_hilight_time_msec = StatusType("last_hilight_time_msec", 59)
        remaining_timelapse_time = StatusType("remaining_timelapse_time", 64)

    class Stream(object):
        enable = StatusType("enable", 32)
        supported = StatusType("supported", 55)

    class System(object):
        internal_battery_present = StatusType("internal_battery_present", 1)
        internal_battery_level = StatusType("internal_battery_level", 2)
        external_battery_present = StatusType("external_battery_present", 3)
        external_battery_level = StatusType("external_battery_level", 4)
        system_hot = StatusType("system_hot", 6)
        system_busy = StatusType("system_busy", 8)
        quick_capture_active = StatusType("quick_capture_active", 9)
        encoding_active = StatusType("encoding_active", 10)
        lcd_lock_active = StatusType("lcd_lock_active", 11)
        camera_locate_active = StatusType("camera_locate_active", 45)
        current_time_msec = StatusType("current_time_msec", 57)
        next_poll_msec = StatusType("next_poll_msec", 60)
        analytics_ready = StatusType("analytics_ready", 61)
        analytics_size = StatusType("analytics_size", 62)
        in_contextual_menu = StatusType("in_contextual_menu", 63)
        gps_status = StatusType("gps_status", 68)
        internal_battery_percentage = StatusType("internal_battery_percentage", 70)
        acc_mic_status = StatusType("acc_mic_status", 74)
        digital_zoom_active = StatusType("digital_zoom_active", 77)
        mobile_friendly_video = StatusType("mobile_friendly_video", 78)
        first_time_use = StatusType("first_time_use", 79)
        system_ready = StatusType("system_ready", 82)
        batt_okay_for_ota = StatusType("batt_okay_for_ota", 83)
        video_low_temp_alert = StatusType("video_low_temp_alert", 85)
        actual_orientation = StatusType("actual_orientation", 86)

    class Video(object):
        video_progress_counter = StatusType("video_progress_counter", 13)
        video_protune_default = StatusType("video_protune_default", 46)
        zoom_while_encoding = StatusType("zoom_while_encoding", 88)

    class Wireless(object):
        enable = StatusType("enable", 17)
        state = StatusType("state", 22)
        wireless_type = StatusType("type", 20)
        pair_time = StatusType("pair_time", 21)
        scan_time_msec = StatusType("scan_time_msec", 23)
        provision_status = StatusType("provision_status", 24)
        remote_control_version = StatusType("remote_control_version", 26)
        remote_control_connected = StatusType("remote_control_connected", 27)
        pairing = StatusType("pairing", 28)
        wlan_ssid = StatusType("wlan_ssid", 29)
        ap_ssid = StatusType("ap_ssid", 30)
        app_count = StatusType("app_count", 31)
        wifi_bars = StatusType("wifi_bars", 56)
        ap_state = StatusType("ap_state", 69)
        wireless_band = StatusType("wireless_band", 76)
        band_5GHz_avail = StatusType("band_5GHz_avail", 81)


class Command(object):
    GPCAMERA_ANALYTICS_FILE_CLEAR = CommandType(
        "GPCAMERA_ANALYTICS_FILE_CLEAR",
        "/gp/gpControl/analytics/clear",
        "button",
        "Remove analytics file and clear analytics log")

    GPCAMERA_ANALYTICS_FILE_GET = CommandType(
        "GPCAMERA_ANALYTICS_FILE_GET",
        "/gp/gpControl/analytics/get",
        "button",
        "Acquire the analytics file as an octet-stream")

    GPCAMERA_ANALYTICS_SET_CLIENT_INFO = CommandType(
        "GPCAMERA_ANALYTICS_SET_CLIENT_INFO",
        "",
        "button",
        "Set the client app info for analytics")

    GPCAMERA_APP_POWER_ON_START = CommandType(
        "GPCAMERA_APP_POWER_ON_START",
        "",
        "button",
        "Notifies the camera that an app powered it on")

    GPCAMERA_BATTERY_LEVEL_ID = CommandType(
        "GPCAMERA_BATTERY_LEVEL_ID",
        "camera_battery",
        "readonly",
        "Battery Level")

    GPCAMERA_CANCEL_PAIR_WIRELESS_ID = CommandType(
        "GPCAMERA_CANCEL_PAIR_WIRELESS_ID",
        "/command/wireless/pair/cancel",
        "button",
        "Cancel pairing if already paired")

    GPCAMERA_CANCEL_PAIR_WIRELESS_REMOTE_ID = CommandType(
        "GPCAMERA_CANCEL_PAIR_WIRELESS_REMOTE_ID",
        "/command/wireless/rc/pair/cancel",
        "button",
        "Cancel pairing of new Wi-Fi Remote")

    GPCAMERA_CHANGE_SETTING = CommandType(
        "GPCAMERA_CHANGE_SETTING",
        "",
        "button",
        "Change a setting")

    GPCAMERA_DELETE_ALL_FILES_ID = CommandType(
        "GPCAMERA_DELETE_ALL_FILES_ID",
        "/command/storage/delete/all",
        "button",
        "Delete All Files from SD Card")

    GPCAMERA_DELETE_FILE_GROUP = CommandType(
        "GPCAMERA_DELETE_FILE_GROUP",
        "",
        "button",
        "Delete File Group")

    GPCAMERA_DELETE_FILE_ID = CommandType(
        "GPCAMERA_DELETE_FILE_ID",
        "/command/storage/delete",
        "button",
        "Delete File")

    GPCAMERA_DELETE_FILE_ID_V3 = CommandType(
        "GPCAMERA_DELETE_FILE_ID_V3",
        "",
        "button",
        "Delete File")

    GPCAMERA_DELETE_LAST_FILE_ID = CommandType(
        "GPCAMERA_DELETE_LAST_FILE_ID",
        "/command/storage/delete/last",
        "button",
        "Delete Last File")

    GPCAMERA_DIGITAL_ZOOM_SET = CommandType(
        "GPCAMERA_DIGITAL_ZOOM_SET",
        "/command/digital_zoom",
        "button",
        "Change digital zoom config")

    GPCAMERA_EXPOSURE_SELECT_RESET = CommandType(
        "GPCAMERA_EXPOSURE_SELECT_RESET",
        "",
        "button",
        "Set Exposure Select back to default value")

    GPCAMERA_EXPOSURE_SELECT_SET = CommandType(
        "GPCAMERA_EXPOSURE_SELECT_SET",
        "",
        "button",
        "Set a new value for Exposure Select")

    GPCAMERA_FACTORY_RESET = CommandType(
        "GPCAMERA_FACTORY_RESET",
        "/command/system/factory/reset",
        "button",
        "Reset to Factory Defaults")

    GPCAMERA_FWUPDATE_DOWNLOAD_CANCEL = CommandType(
        "GPCAMERA_FWUPDATE_DOWNLOAD_CANCEL",
        "/command/fwupdate/download/cancel",
        "button",
        "Cancel FW Update File Download")

    GPCAMERA_FWUPDATE_DOWNLOAD_DONE = CommandType(
        "GPCAMERA_FWUPDATE_DOWNLOAD_DONE",
        "/command/fwupdate/download/done",
        "button",
        "Notify completion of FW Update File Download")

    GPCAMERA_FWUPDATE_DOWNLOAD_FILE = CommandType(
        "GPCAMERA_FWUPDATE_DOWNLOAD_FILE",
        "",
        "button",
        "Perform FW Update File Download")

    GPCAMERA_FWUPDATE_DOWNLOAD_START = CommandType(
        "GPCAMERA_FWUPDATE_DOWNLOAD_START",
        "/command/fwupdate/download/start",
        "button",
        "Notify start FW Update File Download")

    GPCAMERA_GENERIC = CommandType(
        "GPCAMERA_GENERIC",
        "",
        "button",
        "Generic command")

    GPCAMERA_GET_WIFI_CONFIG = CommandType(
        "GPCAMERA_GET_WIFI_CONFIG",
        "",
        "button",
        "Get wifi configuration")

    GPCAMERA_HILIGHT_ADD_PHOTO_MOMENT = CommandType(
        "GPCAMERA_HILIGHT_ADD_PHOTO_MOMENT",
        "",
        "button",
        "HiLight moment for a photo")

    GPCAMERA_HILIGHT_ADD_VIDEO_PLAYBACK_MOMENT = CommandType(
        "GPCAMERA_HILIGHT_ADD_VIDEO_PLAYBACK_MOMENT",
        "",
        "button",
        "HiLight moment during a video playback")

    GPCAMERA_HILIGHT_REMOVE_PHOTO_MOMENT = CommandType(
        "GPCAMERA_HILIGHT_REMOVE_PHOTO_MOMENT",
        "",
        "button",
        "Remove HiLight moment for a photo")

    GPCAMERA_HILIGHT_REMOVE_VIDEO_PLAYBACK_MOMENT = CommandType(
        "GPCAMERA_HILIGHT_REMOVE_VIDEO_PLAYBACK_MOMENT",
        "",
        "button",
        "Remove HiLight moment during a video playback")

    GPCAMERA_INFO = CommandType(
        "GPCAMERA_INFO",
        "",
        "button",
        "Get the camera info")

    GPCAMERA_INFO_VERSION_ID = CommandType(
        "GPCAMERA_INFO_VERSION_ID",
        "camera_version",
        "readonly",
        "Version")

    GPCAMERA_LOCATE_ID = CommandType(
        "GPCAMERA_LOCATE_ID",
        "/command/system/locate",
        "toggle",
        "Locate Camera")

    GPCAMERA_MEDIA_GET_AUDIO_TRACK = CommandType(
        "GPCAMERA_MEDIA_GET_AUDIO_TRACK",
        "",
        "button",
        "Get the audio track from video")

    GPCAMERA_MEDIA_GET_GLOBAL_GPMF = CommandType(
        "GPCAMERA_MEDIA_GET_GLOBAL_GPMF",
        "",
        "button",
        "Get global GPMF for a media")

    GPCAMERA_MEDIA_GET_TELEMETRY_TRACK = CommandType(
        "GPCAMERA_MEDIA_GET_TELEMETRY_TRACK",
        "",
        "button",
        "Get the telemetry track from video")

    GPCAMERA_MEDIA_LIST = CommandType(
        "GPCAMERA_MEDIA_LIST",
        "/gp/gpMediaList",
        "button",
        "Supports listing of media on SD card")

    GPCAMERA_MEDIA_LIST_V4 = CommandType(
        "GPCAMERA_MEDIA_LIST_V4",
        "",
        "button",
        "Supports listing of media on SD card.  Includes metadata session files.")

    GPCAMERA_MEDIA_METADATA = CommandType(
        "GPCAMERA_MEDIA_METADATA",
        "/gp/gpMediaMetadata",
        "button",
        "Supports extraction of metadata from a particular media file")

    GPCAMERA_MEDIA_METADATA_V4 = CommandType(
        "GPCAMERA_MEDIA_METADATA_V4",
        "",
        "button",
        "Supports extraction of additional metadata")

    GPCAMERA_MEDIA_METADATA_V5 = CommandType(
        "GPCAMERA_MEDIA_METADATA_V5",
        "",
        "button",
        "Supports extraction of additional metadata")

    GPCAMERA_MEDIA_SELECTIVE_OFFLOAD = CommandType(
        "GPCAMERA_MEDIA_SELECTIVE_OFFLOAD",
        "",
        "button",
        "Indicates that the camera supports selective offload")

    GPCAMERA_MOBILE_OFFLOAD_GET_STATE = CommandType(
        "GPCAMERA_MOBILE_OFFLOAD_GET_STATE",
        "",
        "button",
        "Get the mobile offload state")

    GPCAMERA_MOBILE_OFFLOAD_NEW_MEDIA_FLAG_CLEAR = CommandType(
        "GPCAMERA_MOBILE_OFFLOAD_NEW_MEDIA_FLAG_CLEAR",
        "",
        "button",
        "Clear the new media flag")

    GPCAMERA_MOBILE_OFFLOAD_POWER_ON_START = CommandType(
        "GPCAMERA_MOBILE_OFFLOAD_POWER_ON_START",
        "",
        "button",
        "Notifies the camera that mobile offload started from a powered off state")

    GPCAMERA_MOBILE_OFFLOAD_START = CommandType(
        "GPCAMERA_MOBILE_OFFLOAD_START",
        "",
        "button",
        "Notifies the camera that mobile offload started")

    GPCAMERA_MOBILE_OFFLOAD_STOP = CommandType(
        "GPCAMERA_MOBILE_OFFLOAD_STOP",
        "",
        "button",
        "Notifies the camera that mobile offload stopped")

    GPCAMERA_MODE = CommandType(
        "GPCAMERA_MODE",
        "/command/mode",
        "button",
        "Set Mode")

    GPCAMERA_MULTISHOT_PROTUNE_RESET_TO_DEFAULT = CommandType(
        "GPCAMERA_MULTISHOT_PROTUNE_RESET_TO_DEFAULT",
        "/command/multi_shot/protune/reset",
        "button",
        "Reset Protune")

    GPCAMERA_NETWORK_NAME_ID = CommandType(
        "GPCAMERA_NETWORK_NAME_ID",
        "/command/wireless/ap/ssid",
        "text",
        "Name")

    GPCAMERA_NETWORK_VERSION_ID = CommandType(
        "GPCAMERA_NETWORK_VERSION_ID",
        "bacpac_version",
        "readonly",
        "Version")

    GPCAMERA_PHOTO_PROTUNE_RESET_TO_DEFAULT = CommandType(
        "GPCAMERA_PHOTO_PROTUNE_RESET_TO_DEFAULT",
        "/command/photo/protune/reset",
        "button",
        "Reset Protune")

    GPCAMERA_POWER_ID = CommandType(
        "GPCAMERA_POWER_ID",
        "/command/system/sleep",
        "button",
        "Power Off Camera")

    GPCAMERA_PREVIEW = CommandType(
        "GPCAMERA_PREVIEW",
        "",
        "button",
        "Camera preview")

    GPCAMERA_PREVIEW_ENABLED = CommandType(
        "GPCAMERA_PREVIEW_ENABLED",
        "",
        "button",
        "Camera preview feature")

    GPCAMERA_PREVIEW_LEGACY = CommandType(
        "GPCAMERA_PREVIEW_LEGACY",
        "",
        "button",
        "Camera preview")

    GPCAMERA_PREVIEW_V2 = CommandType(
        "GPCAMERA_PREVIEW_V2",
        "",
        "button",
        "Camera preview v2")

    GPCAMERA_PREVIEW_V3 = CommandType(
        "GPCAMERA_PREVIEW_V3",
        "",
        "button",
        "Camera preview v3")

    GPCAMERA_RC_PAIR = CommandType(
        "GPCAMERA_RC_PAIR",
        "/command/rc/pair",
        "button",
        "Pair with Known RC")

    GPCAMERA_SDCARD_CAPACITY_ID = CommandType(
        "GPCAMERA_SDCARD_CAPACITY_ID",
        "sd_card",
        "child",
        "SD Card Capacity")

    GPCAMERA_SDCARD_GET_ID = CommandType(
        "GPCAMERA_SDCARD_GET_ID",
        "",
        "button",
        "Get SDCard's unique identifier")

    GPCAMERA_SENSOR_GET_AUTOCONNECT = CommandType(
        "GPCAMERA_SENSOR_GET_AUTOCONNECT",
        "",
        "button",
        "Get the auto-connect state of the camera")

    GPCAMERA_SENSOR_GET_PAIR_STATUS = CommandType(
        "GPCAMERA_SENSOR_GET_PAIR_STATUS",
        "",
        "button",
        "Get the sensor pairing status")

    GPCAMERA_SENSOR_GET_SCAN_RESULTS = CommandType(
        "GPCAMERA_SENSOR_GET_SCAN_RESULTS",
        "",
        "button",
        "Get the scan result")

    GPCAMERA_SENSOR_PAIRING_AVAILABLE = CommandType(
        "GPCAMERA_SENSOR_PAIRING_AVAILABLE",
        "",
        "button",
        "Get the pairing availability status")

    GPCAMERA_SENSOR_PAIR_START = CommandType(
        "GPCAMERA_SENSOR_PAIR_START",
        "",
        "button",
        "Pair the sensor")

    GPCAMERA_SENSOR_PAIR_STOP = CommandType(
        "GPCAMERA_SENSOR_PAIR_STOP",
        "",
        "button",
        "Stop pairing of the sensor")

    GPCAMERA_SENSOR_SCAN = CommandType(
        "GPCAMERA_SENSOR_SCAN",
        "",
        "button",
        "Scan for sensors")

    GPCAMERA_SENSOR_SET_AUTOCONNECT = CommandType(
        "GPCAMERA_SENSOR_SET_AUTOCONNECT",
        "",
        "button",
        "Set the auto-connect state of the camera")

    GPCAMERA_SENSOR_SET_PAIRING_PHASE = CommandType(
        "GPCAMERA_SENSOR_SET_PAIRING_PHASE",
        "",
        "button",
        "Enter or exit pairing phase")

    GPCAMERA_SENSOR_WHITELIST = CommandType(
        "GPCAMERA_SENSOR_WHITELIST",
        "",
        "button",
        "Get the whitelist of sensors")

    GPCAMERA_SENSOR_WHITELIST_CONFIGURE = CommandType(
        "GPCAMERA_SENSOR_WHITELIST_CONFIGURE",
        "",
        "button",
        "Configure a whitelisted sensor")

    GPCAMERA_SENSOR_WHITELIST_DEVICE_INFO = CommandType(
        "GPCAMERA_SENSOR_WHITELIST_DEVICE_INFO",
        "",
        "button",
        "Get the whitelist info for a single sensor")

    GPCAMERA_SENSOR_WHITELIST_REMOVE = CommandType(
        "GPCAMERA_SENSOR_WHITELIST_REMOVE",
        "",
        "button",
        "Remove a sensor from the whitelist")

    GPCAMERA_SESSION_LIST = CommandType(
        "GPCAMERA_SESSION_LIST",
        "",
        "button",
        "Listing of session files on SD card")

    GPCAMERA_SET_DATE_AND_TIME_ID = CommandType(
        "GPCAMERA_SET_DATE_AND_TIME_ID",
        "/command/setup/date_time",
        "button",
        "Set Date and Time")

    GPCAMERA_SET_WIFI_CONFIG_V2 = CommandType(
        "GPCAMERA_SET_WIFI_CONFIG_V2",
        "",
        "button",
        "Set wifi SSID")

    GPCAMERA_SHUTTER = CommandType(
        "GPCAMERA_SHUTTER",
        "/command/shutter",
        "button",
        "Start or stop capture")

    GPCAMERA_SLEEP = CommandType(
        "GPCAMERA_SLEEP",
        "/command/system/sleep",
        "button",
        "Power Saving Sleep Mode")

    GPCAMERA_SSID_DELETE = CommandType(
        "GPCAMERA_SSID_DELETE",
        "/command/wireless/ssid/delete",
        "button",
        "Delete Wi-Fi SSID from Known List")

    GPCAMERA_SSID_LIST = CommandType(
        "GPCAMERA_SSID_LIST",
        "/command/wireless/ssid/list",
        "button",
        "Wi-Fi SSID Scan Results")

    GPCAMERA_SSID_SAVE = CommandType(
        "GPCAMERA_SSID_SAVE",
        "/command/wireless/ssid/save",
        "button",
        "Save Wi-Fi SSID to Known List")

    GPCAMERA_SSID_SCAN = CommandType(
        "GPCAMERA_SSID_SCAN",
        "/command/wireless/ssid/scan",
        "button",
        "Start Wi-Fi SSID Scan")

    GPCAMERA_SSID_SELECT = CommandType(
        "GPCAMERA_SSID_SELECT",
        "/command/wireless/ssid/select",
        "button",
        "Connect to Wi-Fi SSID")

    GPCAMERA_SUBMODE = CommandType(
        "GPCAMERA_SUBMODE",
        "/command/sub_mode",
        "button",
        "Set Mode and Sub-Mode")

    GPCAMERA_TAG_MOMENT = CommandType(
        "GPCAMERA_TAG_MOMENT",
        "/command/storage/tag_moment",
        "button",
        "Tag Moment")

    GPCAMERA_TURBO_MODE_ENABLE = CommandType(
        "GPCAMERA_TURBO_MODE_ENABLE",
        "",
        "button",
        "Enable camera turbo mode")

    GPCAMERA_USE_CURRENT_WIRELESS_REMOTE_ID = CommandType(
        "GPCAMERA_USE_CURRENT_WIRELESS_REMOTE_ID",
        "/setting/63/2",
        "button",
        "Use with Current Wi-Fi Remote")

    GPCAMERA_USE_NEW_WIRELESS_REMOTE_ID = CommandType(
        "GPCAMERA_USE_NEW_WIRELESS_REMOTE_ID",
        "/command/wireless/rc/pair",
        "button",
        "Use with New Wi-Fi Remote")

    GPCAMERA_VIDEO_PROTUNE_RESET_TO_DEFAULT = CommandType(
        "GPCAMERA_VIDEO_PROTUNE_RESET_TO_DEFAULT",
        "/command/video/protune/reset",
        "button",
        "Reset Protune")

    GPCAMERA_WIRELESS_PAIRING_COMPLETE = CommandType(
        "GPCAMERA_WIRELESS_PAIRING_COMPLETE",
        "",
        "button",
        "Sets the camera's connection setup state to success or failed")

    GPCAMERA_WIRELESS_SELECT_BAND = CommandType(
        "GPCAMERA_WIRELESS_SELECT_BAND",
        "",
        "button",
        "Sets the camera's Wifi band to 2.4GHz or 5GHz")


class Mode(Enum):
    VIDEO = '0'
    PHOTO = '1'
    MULTI_SHOT = '2'
    BROADCAST = '3'
    PLAYBACK = '4'
    SETUP = '5'
    AUDIO = '6'


class SubMode(object):

    class Video(Enum):
        VIDEO = '0'
        TIME_LAPSE_VIDEO = '1'
        LOOPING = '3'
        TIME_WARP_VIDEO = '4'

    class Photo(Enum):
        SINGLE = '0'
        CONTINUOUS = '1'
        NIGHT = '2'

    class MultiShot(Enum):
        BURST = '0'
        TIME_LAPSE_PHOTO = '1'
        NIGHT_LAPSE = '2'

    class Broadcast(Enum):
        RECORD_PLUS_BROADCAST = '0'
        BROADCAST = '1'


class VideoSettings(object):
    class Section(Enum):
        RESOLUTION = '2'
        FPS = '3'
        FOV = '4'
        TIMELAPSE_RATE = '5'
        LOOPING = '6'
        LOW_LIGHT = '8'
        PROTUNE = '10'
        PROTUNE_WHITE_BALANCE = '11'
        PROTUNE_COLOR = '12'
        PROTUNE_ISO = '13'
        PROTUNE_SHARPNESS = '14'
        PROTUNE_EV = '15'
        CURRENT_SUB_MODE = '68'
        EXPOSURE_TIME = '73'
        EIS = '78'
        NO_AUDIO = '96'
        PROTUNE_ISO_MIN = '102'
        SHORT_CLIP_LENGTH = '107'
        ASPECT_RATIO = '108'
        TIMEWARP_SPEED = '111'

    class Resolution(Enum):
        RES_4K = '1'
        RES_2_7K = '4'
        RES_2_7K_4TO3 = '6'
        RES_1440 = '7'
        RES_1080 = '9'
        RES_960 = '10'
        RES_720 = '12'
        RES_4K_4TO3 = '18'

    class Fps(Enum):
        FPS_240 = '0'
        FPS_120 = '1'
        FPS_100 = '2'
        FPS_90 = '3'
        FPS_80 = '4'
        FPS_60 = '5'
        FPS_50 = '6'
        FPS_48 = '7'
        FPS_30 = '8'
        FPS_25 = '9'
        FPS_24 = '10'
        FPS_15 = '11'
        FPS_12_5 = '12'
        FPS_200 = '13'

    class Fov(Enum):
        WIDE = '0'
        SUPERVIEW = '3'
        LINEAR = '4'

    class TimelapseRate(Enum):
        RATE_0_5_SECONDS = '0'
        RATE_1_SECOND = '1'
        RATE_2_SECONDS = '2'
        RATE_5_SECONDS = '3'
        RATE_10_SECONDS = '4'
        RATE_30_SECONDS = '5'
        RATE_60_SECONDS = '6'

    class Looping(Enum):
        TIME_MAX = '0'
        TIME_5_MINUTES = '1'
        TIME_20_MINUTES = '2'
        TIME_60_MINUTES = '3'
        TIME_120_MINUTES = '4'

    class LowLight(Enum):
        OFF = '0'
        ON = '1'

    class Protune(Enum):
        OFF = '0'
        ON = '1'

    class ProtuneWhiteBalance(Enum):
        COLOR_AUTO = '0'
        COLOR_5500K = '2'
        COLOR_6500K = '3'
        COLOR_NATIVE = '4'
        COLOR_4000K = '5'
        COLOR_6000K = '7'
        COLOR_2300K = '8'
        COLOR_2800K = '9'
        COLOR_3200K = '10'
        COLOR_4500K = '11'
        COLOR_5000K = '12'

    class ProtuneColor(Enum):
        GOPRO = '0'
        FLAT = '1'

    class ProtuneIso(Enum):
        ISO_6400 = '0'
        ISO_1600 = '1'
        ISO_400 = '2'
        ISO_3200 = '3'
        ISO_800 = '4'
        ISO_200 = '7'
        ISO_100 = '8'

    class ProtuneSharpness(Enum):
        HIGH = '0'
        MEDIUM = '1'
        LOW = '2'

    class ProtuneEv(Enum):
        EV_2_0 = '0'
        EV_1_5 = '1'
        EV_1_0 = '2'
        EV_0_5 = '3'
        EV_0_0 = '4'
        EV_NEG_0_5 = '5'
        EV_NEG_1_0 = '6'
        EV_NEG_1_5 = '7'
        EV_NEG_2_0 = '8'

    class CurrentSubMode(Enum):
        VIDEO = '0'
        TIME_LAPSE_VIDEO = '1'
        LOOPING = '3'
        TIME_WARP_VIDEO = '4'

    class ExposureTime(Enum):
        TIME_AUTO = '0'
        TIME_1_IN_12_5 = '1'
        TIME_1_IN_15 = '2'
        TIME_1_IN_24 = '3'
        TIME_1_IN_25 = '4'
        TIME_1_IN_30 = '5'
        TIME_1_IN_48 = '6'
        TIME_1_IN_50 = '7'
        TIME_1_IN_60 = '8'
        TIME_1_IN_80 = '9'
        TIME_1_IN_90 = '10'
        TIME_1_IN_96 = '11'
        TIME_1_IN_100 = '12'
        TIME_1_IN_120 = '13'
        TIME_1_IN_160 = '14'
        TIME_1_IN_180 = '15'
        TIME_1_IN_192 = '16'
        TIME_1_IN_200 = '17'
        TIME_1_IN_240 = '18'
        TIME_1_IN_320 = '19'
        TIME_1_IN_360 = '20'
        TIME_1_IN_400 = '21'
        TIME_1_IN_480 = '22'
        TIME_1_IN_960 = '23'
        TIME_1_IN_1920 = '24'
        TIME_1_IN_384 = '25'
        TIME_1_IN_640 = '26'
        TIME_1_IN_720 = '27'
        TIME_1_IN_800 = '28'
        TIME_1_IN_1600 = '29'
        TIME_1_IN_3200 = '30'
        TIME_1_IN_3840 = '31'

    class Eis(Enum):
        OFF = '0'
        ON = '1'

    class NoAudio(Enum):
        OFF = '0'
        ON = '1'

    class ProtuneIsoMin(Enum):
        ISO_6400 = '0'
        ISO_1600 = '1'
        ISO_400 = '2'
        ISO_3200 = '3'
        ISO_800 = '4'
        ISO_200 = '7'
        ISO_100 = '8'

    class ShortClipLength(Enum):
        LENGTH_OFF = '0'
        LENGTH_15_SECONDS = '1'
        LENGTH_30_SECONDS = '2'

    class AspectRatio(Enum):
        ASPECT_4TO3 = '0'
        ASPECT_16TO9 = '1'

    class TimewarpSpeed(Enum):
        SPEED_15X = '0'
        SPEED_30X = '1'
        SPEED_2X = '7'
        SPEED_5X = '8'
        SPEED_10X = '9'


class PhotoSettings(object):
    class Section(Enum):
        RESOLUTION = '17'
        EXPOSURE_TIME = '19'
        PROTUNE = '21'
        PROTUNE_WHITE_BALANCE = '22'
        PROTUNE_COLOR = '23'
        PROTUNE_ISO = '24'
        PROTUNE_SHARPNESS = '25'
        PROTUNE_EV = '26'
        CURRENT_SUB_MODE = '69'
        PROTUNE_ISO_MIN = '75'
        SINGLE_RAW = '82'
        PROTUNE_EXPOSURE_TIME = '97'
        NIGHT_RAW = '98'
        CAPTURE_DELAY = '105'
        SINGLE_SUPER_PHOTO = '109'

    class Resolution(Enum):
        RES_WIDE = '0'
        RES_LINEAR = '10'

    class ExposureTime(Enum):
        TIME_AUTO = '0'
        TIME_2_SECONDS = '1'
        TIME_5_SECONDS = '2'
        TIME_10_SECONDS = '3'
        TIME_15_SECONDS = '4'
        TIME_20_SECONDS = '5'
        TIME_30_SECONDS = '6'

    class Protune(Enum):
        OFF = '0'
        ON = '1'

    class ProtuneWhiteBalance(Enum):
        COLOR_AUTO = '0'
        COLOR_5500K = '2'
        COLOR_6500K = '3'
        COLOR_NATIVE = '4'
        COLOR_4000K = '5'
        COLOR_6000K = '7'
        COLOR_2300K = '8'
        COLOR_2800K = '9'
        COLOR_3200K = '10'
        COLOR_4500K = '11'
        COLOR_5000K = '12'

    class ProtuneColor(Enum):
        GOPRO = '0'
        FLAT = '1'

    class ProtuneIso(Enum):
        ISO_800 = '0'
        ISO_400 = '1'
        ISO_200 = '2'
        ISO_100 = '3'
        ISO_1600 = '4'
        ISO_3200 = '5'

    class ProtuneSharpness(Enum):
        HIGH = '0'
        MEDIUM = '1'
        LOW = '2'

    class ProtuneEv(Enum):
        EV_2_0 = '0'
        EV_1_5 = '1'
        EV_1_0 = '2'
        EV_0_5 = '3'
        EV_0_0 = '4'
        EV_NEG_0_5 = '5'
        EV_NEG_1_0 = '6'
        EV_NEG_1_5 = '7'
        EV_NEG_2_0 = '8'

    class CurrentSubMode(Enum):
        SINGLE = '0'
        CONTINUOUS = '1'
        NIGHT = '2'

    class ProtuneIsoMin(Enum):
        ISO_800 = '0'
        ISO_400 = '1'
        ISO_200 = '2'
        ISO_100 = '3'
        ISO_1600 = '4'
        ISO_3200 = '5'

    class SingleRaw(Enum):
        OFF = '0'
        ON = '1'

    class ProtuneExposureTime(Enum):
        TIME_AUTO = '0'
        TIME_1_IN_125 = '1'
        TIME_1_IN_250 = '2'
        TIME_1_IN_500 = '3'
        TIME_1_IN_1000 = '4'
        TIME_1_IN_2000 = '5'

    class NightRaw(Enum):
        OFF = '0'
        ON = '1'

    class CaptureDelay(Enum):
        DELAY_NONE = '0'
        DELAY_3_SECONDS = '1'
        DELAY_10_SECONDS = '2'

    class SingleSuperPhoto(Enum):
        OFF = '0'
        AUTO = '1'
        HDR_ONLY = '2'


class MultiShotSettings(object):
    class Section(Enum):
        RESOLUTION = '28'
        BURST_RATE = '29'
        TIMELAPSE_RATE = '30'
        EXPOSURE_TIME = '31'
        NIGHTLAPSE_RATE = '32'
        PROTUNE = '34'
        PROTUNE_WHITE_BALANCE = '35'
        PROTUNE_COLOR = '36'
        PROTUNE_ISO = '37'
        PROTUNE_SHARPNESS = '38'
        PROTUNE_EV = '39'
        CURRENT_SUB_MODE = '70'
        PROTUNE_ISO_MIN = '76'
        TIMELAPSE_RAW = '94'
        NIGHTLAPSE_RAW = '99'
        CAPTURE_DELAY = '105'

    class Resolution(Enum):
        RES_WIDE = '0'
        RES_LINEAR = '10'

    class BurstRate(Enum):
        RATE_3_PHOTOS_IN_1_SECOND = '0'
        RATE_5_PHOTOS_IN_1_SECOND = '1'
        RATE_10_PHOTOS_IN_1_SECOND = '2'
        RATE_10_PHOTOS_IN_2_SECONDS = '3'
        RATE_10_PHOTOS_IN_3_SECONDS = '4'
        RATE_30_PHOTOS_IN_1_SECOND = '5'
        RATE_30_PHOTOS_IN_2_SECONDS = '6'
        RATE_30_PHOTOS_IN_3_SECONDS = '7'
        RATE_30_PHOTOS_IN_6_SECONDS = '8'
        RATE_AUTO = '9'

    class TimelapseRate(Enum):
        RATE_1_PHOTO_IN_0_5_SEC = '0'
        RATE_1_PHOTO_IN_1_SEC = '1'
        RATE_1_PHOTO_IN_2_SEC = '2'
        RATE_1_PHOTO_IN_5_SEC = '5'
        RATE_1_PHOTO_IN_10_SEC = '10'
        RATE_1_PHOTO_IN_30_SEC = '30'
        RATE_1_PHOTO_IN_60_SEC = '60'

    class ExposureTime(Enum):
        TIME_AUTO = '0'
        TIME_2_SECONDS = '1'
        TIME_5_SECONDS = '2'
        TIME_10_SECONDS = '3'
        TIME_15_SECONDS = '4'
        TIME_20_SECONDS = '5'
        TIME_30_SECONDS = '6'

    class NightlapseRate(Enum):
        RATE_4_SECONDS = '4'
        RATE_5_SECONDS = '5'
        RATE_10_SECONDS = '10'
        RATE_15_SECONDS = '15'
        RATE_20_SECONDS = '20'
        RATE_30_SECONDS = '30'
        RATE_1_MINUTE = '60'
        RATE_2_MINUTES = '120'
        RATE_5_MINUTES = '300'
        RATE_30_MINUTES = '1800'
        RATE_60_MINUTES = '3600'
        RATE_AUTO = '3601'

    class Protune(Enum):
        OFF = '0'
        ON = '1'

    class ProtuneWhiteBalance(Enum):
        COLOR_AUTO = '0'
        COLOR_5500K = '2'
        COLOR_6500K = '3'
        COLOR_NATIVE = '4'
        COLOR_4000K = '5'
        COLOR_6000K = '7'
        COLOR_2300K = '8'
        COLOR_2800K = '9'
        COLOR_3200K = '10'
        COLOR_4500K = '11'
        COLOR_5000K = '12'

    class ProtuneColor(Enum):
        GOPRO = '0'
        FLAT = '1'

    class ProtuneIso(Enum):
        ISO_800 = '0'
        ISO_400 = '1'
        ISO_200 = '2'
        ISO_100 = '3'
        ISO_1600 = '4'
        ISO_3200 = '5'

    class ProtuneSharpness(Enum):
        HIGH = '0'
        MEDIUM = '1'
        LOW = '2'

    class ProtuneEv(Enum):
        EV_2_0 = '0'
        EV_1_5 = '1'
        EV_1_0 = '2'
        EV_0_5 = '3'
        EV_0_0 = '4'
        EV_NEG_0_5 = '5'
        EV_NEG_1_0 = '6'
        EV_NEG_1_5 = '7'
        EV_NEG_2_0 = '8'

    class CurrentSubMode(Enum):
        BURST = '0'
        TIME_LAPSE_PHOTO = '1'
        NIGHT_LAPSE = '2'

    class ProtuneIsoMin(Enum):
        ISO_800 = '0'
        ISO_400 = '1'
        ISO_200 = '2'
        ISO_100 = '3'
        ISO_1600 = '4'
        ISO_3200 = '5'

    class TimelapseRaw(Enum):
        OFF = '0'
        ON = '1'

    class NightlapseRaw(Enum):
        OFF = '0'
        ON = '1'

    class CaptureDelay(Enum):
        DELAY_NONE = '0'
        DELAY_3_SECONDS = '1'
        DELAY_10_SECONDS = '2'


class BroadcastSettings(object):
    class Section(Enum):
        RESOLUTION = '41'
        FPS = '42'
        FOV = '43'
        RECORD_RESOLUTION = '44'
        RECORD_FPS = '45'
        RECORD_FOV = '46'
        WINDOW_SIZE = '47'
        PRIVACY = '48'
        GOP_SIZE = '65'
        IDR_INTERVAL = '66'
        BIT_RATE = '67'
        CURRENT_SUB_MODE = '71'

    class Resolution(Enum):
        RES_4K = '1'
        RES_4K_SUPERVIEW = '2'
        RES_2_7K = '4'
        RES_2_7K_SUPERVIEW = '5'
        RES_2_7K_4TO3 = '6'
        RES_1440 = '7'
        RES_1080_SUPERVIEW = '8'
        RES_1080 = '9'
        RES_960 = '10'
        RES_720_SUPERVIEW = '11'
        RES_720 = '12'
        RES_WVGA = '13'
        RES_2_7K_1TO1 = '14'
        RES_1_5K_1TO1 = '15'
        RES_PANO_1TO1 = '16'
        RES_480 = '17'
        RES_4K_4TO3 = '18'

    class Fps(Enum):
        FPS_240 = '0'
        FPS_120 = '1'
        FPS_100 = '2'
        FPS_90 = '3'
        FPS_80 = '4'
        FPS_60 = '5'
        FPS_50 = '6'
        FPS_48 = '7'
        FPS_30 = '8'
        FPS_25 = '9'
        FPS_24 = '10'
        FPS_15 = '11'
        FPS_12_5 = '12'
        FPS_200 = '13'

    class Fov(Enum):
        WIDE = '0'
        MEDIUM = '1'
        NARROW = '2'

    class RecordResolution(Enum):
        R_4K = '1'
        R_4K_SUPERVIEW = '2'
        R_2_7K = '4'
        R_2_7K_SUPERVIEW = '5'
        R_2_7K_4TO3 = '6'
        R_1440 = '7'
        R_1080_SUPERVIEW = '8'
        R_1080 = '9'
        R_960 = '10'
        R_720_SUPERVIEW = '11'
        R_720 = '12'
        R_WVGA = '13'
        R_2_7K_1TO1 = '14'
        R_1_5K_1TO1 = '15'
        R_PANO_1TO1 = '16'
        R_480 = '17'
        R_4K_4TO3 = '18'

    class RecordFps(Enum):
        FPS_240 = '0'
        FPS_120 = '1'
        FPS_100 = '2'
        FPS_90 = '3'
        FPS_80 = '4'
        FPS_60 = '5'
        FPS_50 = '6'
        FPS_48 = '7'
        FPS_30 = '8'
        FPS_25 = '9'
        FPS_24 = '10'
        FPS_15 = '11'
        FPS_12_5 = '12'
        FPS_200 = '13'

    class RecordFov(Enum):
        WIDE = '0'
        MEDIUM = '1'
        NARROW = '2'

    class WindowSize(Enum):
        SIZE_DEFAULT = '0'
        SIZE_240 = '1'
        SIZE_240_3TO4_SUBSAMPLE = '2'
        SIZE_240_1TO2_SUBSAMPLE = '3'
        SIZE_480 = '4'
        SIZE_480_3TO4_SUBSAMPLE = '5'
        SIZE_480_1TO2_SUBSAMPLE = '6'
        SIZE_720 = '7'
        SIZE_720_3TO4_SUBSAMPLE = '8'
        SIZE_720_1TO2_SUBSAMPLE = '9'

    class Privacy(Enum):
        ASK = '0'
        PUBLIC = '1'
        HIDDEN = '2'

    class GopSize(Enum):
        SIZE_DEFAULT = '0'
        SIZE_3 = '3'
        SIZE_4 = '4'
        SIZE_8 = '8'
        SIZE_15 = '15'
        SIZE_30 = '30'

    class IdrInterval(Enum):
        INTERVAL_DEFAULT = '0'
        INTERVAL_1 = '1'
        INTERVAL_2 = '2'
        INTERVAL_4 = '4'

    class BitRate(Enum):
        RATE_250_KBPS = '250000'
        RATE_400_KBPS = '400000'
        RATE_600_KBPS = '600000'
        RATE_700_KBPS = '700000'
        RATE_800_KBPS = '800000'
        RATE_1_MBPS = '1000000'
        RATE_1_2_MBPS = '1200000'
        RATE_1_6_MBPS = '1600000'
        RATE_2_MBPS = '2000000'
        RATE_2_4_MBPS = '2400000'
        RATE_2_5_MBPS = '2500000'
        RATE_4_MBPS = '4000000'

    class CurrentSubMode(Enum):
        RECORD_PLUS_BROADCAST = '0'
        BROADCAST = '1'


class SetupSettings(object):
    class Section(Enum):
        LCD_SLEEP = '51'
        QUICK_CAPTURE = '54'
        VIDEO_FORMAT = '57'
        AUTO_POWER_DOWN = '59'
        STREAM_GOP_SIZE = '60'
        STREAM_IDR_INTERVAL = '61'
        STREAM_BIT_RATE = '62'
        STREAM_WINDOW_SIZE = '64'
        GPS = '83'
        LANGUAGE = '84'
        VOICE_CONTROL_LANGUAGE = '85'
        LOCAL_VOICE_CONTROL = '86'
        BEEP_VOLUME_V2 = '87'
        LCD_BRIGHTNESS_V2 = '88'
        DEFAULT_APP_MODE_FLAT = '89'
        LED_V2 = '91'
        CURRENT_FLAT_MODE = '92'
        ACC_MIC_MODE = '95'
        AUTO_SCREEN_LOCK = '103'
        WAKE_ON_VOICE = '104'
        VIDEO_COMPRESSION = '106'
        LANDSCAPE_LOCK = '112'

    class LcdSleep(Enum):
        SLEEP_NEVER = '0'
        SLEEP_1_MIN = '1'
        SLEEP_2_MIN = '2'
        SLEEP_3_MIN = '3'

    class QuickCapture(Enum):
        OFF = '0'
        ON = '1'

    class VideoFormat(Enum):
        NTSC = '0'
        PAL = '1'

    class AutoPowerDown(Enum):
        OFF_NEVER = '0'
        OFF_5_MIN = '4'
        OFF_15_MIN = '6'
        OFF_30_MIN = '7'

    class StreamGopSize(Enum):
        SIZE_DEFAULT = '0'
        SIZE_3 = '3'
        SIZE_4 = '4'
        SIZE_8 = '8'
        SIZE_15 = '15'
        SIZE_30 = '30'

    class StreamIdrInterval(Enum):
        INTERVAL_DEFAULT = '0'
        INTERVAL_1 = '1'
        INTERVAL_2 = '2'
        INTERVAL_4 = '4'

    class StreamBitRate(Enum):
        RATE_250_KBPS = '250000'
        RATE_400_KBPS = '400000'
        RATE_600_KBPS = '600000'
        RATE_700_KBPS = '700000'
        RATE_800_KBPS = '800000'
        RATE_1_MBPS = '1000000'
        RATE_1_2_MBPS = '1200000'
        RATE_1_6_MBPS = '1600000'
        RATE_2_MBPS = '2000000'
        RATE_2_4_MBPS = '2400000'
        RATE_2_5_MBPS = '2500000'
        RATE_4_MBPS = '4000000'

    class StreamWindowSize(Enum):
        SIZE_DEFAULT = '0'
        SIZE_240 = '1'
        SIZE_240_3TO4_SUBSAMPLE = '2'
        SIZE_240_1TO2_SUBSAMPLE = '3'
        SIZE_480 = '4'
        SIZE_480_3TO4_SUBSAMPLE = '5'
        SIZE_480_1TO2_SUBSAMPLE = '6'
        SIZE_720 = '7'
        SIZE_720_3TO4_SUBSAMPLE = '8'
        SIZE_720_1TO2_SUBSAMPLE = '9'

    class Gps(Enum):
        OFF = '0'
        ON = '1'

    class Language(Enum):
        ENGLISH = '0'
        CHINESE = '1'
        GERMAN = '2'
        ITALIAN = '3'
        SPANISH = '4'
        JAPANESE = '5'
        FRENCH = '6'
        KOREAN = '7'
        PORTUGUESE = '8'
        RUSSIAN = '9'

    class VoiceControlLanguage(Enum):
        ENGLISH_NEG_US = '0'
        ENGLISH_NEG_UK = '1'
        ENGLISH_NEG_AUS = '2'
        GERMAN = '3'
        FRENCH = '4'
        ITALIAN = '5'
        SPANISH = '6'
        SPANISH_NEG_NA = '7'
        CHINESE = '8'
        JAPANESE = '9'
        KOREAN = '10'
        PORTUGUESE = '11'
        RUSSIAN = '12'
        ENGLISH_NEG_IND = '13'

    class LocalVoiceControl(Enum):
        OFF = '0'
        ON = '1'

    class BeepVolumeV2(Enum):
        MUTE = '0'
        LOW = '40'
        MEDIUM = '70'
        HIGH = '100'

    class LcdBrightnessV2(Enum):
        PERCENT_10 = '10'
        PERCENT_20 = '20'
        PERCENT_30 = '30'
        PERCENT_40 = '40'
        PERCENT_50 = '50'
        PERCENT_60 = '60'
        PERCENT_70 = '70'
        PERCENT_80 = '80'
        PERCENT_90 = '90'
        PERCENT_100 = '100'

    class DefaultAppModeFlat(Enum):
        VIDEO_MODE = '0'
        PHOTO_MODE = '1'
        MULTI_NEG_SHOT_MODE = '2'
        BROADCAST_MODE = '3'
        PLAYBACK = '4'
        SETUP = '5'
        FW_UPDATE = '6'
        USB_MTP = '7'
        SOS = '8'
        MEDIT = '9'
        CALIBRATION = '10'
        DIRECT_OFFLOAD = '11'
        VIDEO = '12'
        TIME_LAPSE_VIDEO = '13'
        VIDEO_PLUS_PHOTO = '14'
        LOOPING = '15'
        SINGLE_PHOTO = '16'
        PHOTO = '17'
        NIGHT_PHOTO = '18'
        BURST_PHOTO = '19'
        TIME_LAPSE_PHOTO = '20'
        NIGHT_LAPSE_PHOTO = '21'
        BROADCAST_RECORD = '22'
        BROADCAST = '23'
        TIME_WARP_VIDEO = '24'

    class LedV2(Enum):
        OFF = '0'
        FRONT_OFF = '1'
        ON = '2'

    class CurrentFlatMode(Enum):
        VIDEO_MODE = '0'
        PHOTO_MODE = '1'
        MULTI_NEG_SHOT_MODE = '2'
        BROADCAST_MODE = '3'
        PLAYBACK = '4'
        SETUP = '5'
        FW_UPDATE = '6'
        USB_MTP = '7'
        SOS = '8'
        MEDIT = '9'
        CALIBRATION = '10'
        DIRECT_OFFLOAD = '11'
        VIDEO = '12'
        TIME_LAPSE_VIDEO = '13'
        VIDEO_PLUS_PHOTO = '14'
        LOOPING = '15'
        SINGLE_PHOTO = '16'
        PHOTO = '17'
        NIGHT_PHOTO = '18'
        BURST_PHOTO = '19'
        TIME_LAPSE_PHOTO = '20'
        NIGHT_LAPSE_PHOTO = '21'
        BROADCAST_RECORD = '22'
        BROADCAST = '23'
        TIME_WARP_VIDEO = '24'

    class AccMicMode(Enum):
        NONE = '0'
        STANDARD_MIC = '1'
        STANDARD_MIC_PLUS_ = '2'
        POWERED_MIC = '3'
        POWERED_MIC_PLUS_ = '4'
        LINE_IN = '5'

    class AutoScreenLock(Enum):
        OFF = '3'
        ON = '5'

    class WakeOnVoice(Enum):
        OFF = '0'
        ON = '1'

    class VideoCompression(Enum):
        COMPATIBLE = '0'
        HEVC = '1'

    class LandscapeLock(Enum):
        OFF = '0'
        UP = '1'
        DOWN = '2'


class AudioSettings(object):
    class Section(Enum):
        OPTION = '80'
        PROTUNE_OPTION = '81'

    class Option(Enum):
        STEREO_ONLY = '0'
        WIND_ONLY = '1'
        AUTO = '2'

    class ProtuneOption(Enum):
        LOW = '0'
        MEDIUM = '1'
        HIGH = '2'
        OFF = '3'
